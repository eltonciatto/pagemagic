# Page Magic - Nginx Configuration
# Reverse proxy e load balancer para os microservi√ßos

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=generation:10m rate=10r/m;

    # Upstream definitions
    upstream auth_backend {
        least_conn;
        server auth-svc:8080 max_fails=3 fail_timeout=30s;
    }

    upstream prompt_backend {
        least_conn;
        server prompt-svc:3000 max_fails=3 fail_timeout=30s;
    }

    upstream builder_backend {
        least_conn;
        server builder-svc:8080 max_fails=3 fail_timeout=30s;
    }

    upstream build_backend {
        least_conn;
        server build-svc:8080 max_fails=3 fail_timeout=30s;
    }

    upstream host_backend {
        least_conn;
        server host-svc:8080 max_fails=3 fail_timeout=30s;
    }

    upstream domain_backend {
        least_conn;
        server domain-svc:8000 max_fails=3 fail_timeout=30s;
    }

    upstream meter_backend {
        least_conn;
        server meter-svc:8080 max_fails=3 fail_timeout=30s;
    }

    upstream billing_backend {
        least_conn;
        server billing-svc:8080 max_fails=3 fail_timeout=30s;
    }

    upstream i18n_backend {
        least_conn;
        server i18n-svc:3000 max_fails=3 fail_timeout=30s;
    }

    upstream frontend_backend {
        least_conn;
        server front-web:3000 max_fails=3 fail_timeout=30s;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost *.pagemagic.local;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Routes with rate limiting

        # Authentication service
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://auth_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # AI Generation service (with higher rate limiting)
        location /api/generate/ {
            limit_req zone=generation burst=5 nodelay;
            proxy_pass http://prompt_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Builder service
        location /api/builder/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://builder_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Build service
        location /api/build/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://build_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Host service
        location /api/host/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://host_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Domain service
        location /api/domains/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://domain_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Meter service
        location /api/metrics/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://meter_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Billing service
        location /api/billing/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://billing_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # I18n service
        location /api/i18n/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://i18n_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Frontend application (Next.js)
        location / {
            proxy_pass http://frontend_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # HTTPS server (production)
    server {
        listen 443 ssl http2;
        server_name *.pagemagic.io pagemagic.io;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers for HTTPS
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # Same location blocks as HTTP but with SSL
        # (Inherits from above)
    }

    # Dynamic site hosting (for published sites)
    server {
        listen 80;
        server_name ~^(?<site_id>[a-zA-Z0-9\-]+)\.sites\.pagemagic\.local$;

        location / {
            resolver 127.0.0.11 valid=30s;
            set $target http://site_${site_id}:3000;
            proxy_pass $target;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add usage metering headers
            proxy_set_header X-Meter-Event "page_view";
            proxy_set_header X-Meter-Site-ID $site_id;
            proxy_set_header X-Meter-User-IP $remote_addr;
        }
    }
}
