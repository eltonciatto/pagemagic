#!/bin/bash

# Page Magic - Script de Inicializa√ß√£o R√°pida
# Este script configura o ambiente de desenvolvimento completo

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}ü™Ñ Page Magic - Configura√ß√£o Inicial${NC}"
echo ""

# Verificar se Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Docker n√£o est√° rodando. Por favor, inicie o Docker primeiro.${NC}"
    exit 1
fi

# Verificar se Docker Compose est√° dispon√≠vel
if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose n√£o encontrado. Por favor, instale o Docker Compose.${NC}"
    exit 1
fi

# Criar arquivo .env se n√£o existir
if [ ! -f .env ]; then
    echo -e "${YELLOW}üìù Criando arquivo .env...${NC}"
    cp .env.example .env
    echo -e "${GREEN}‚úÖ Arquivo .env criado. Edite-o com suas configura√ß√µes se necess√°rio.${NC}"
fi

# Criar diret√≥rios necess√°rios
echo -e "${YELLOW}üìÅ Criando diret√≥rios necess√°rios...${NC}"
mkdir -p logs
mkdir -p data/postgres
mkdir -p data/redis
mkdir -p data/minio
mkdir -p tmp/builds

# Inicializar infraestrutura
echo -e "${YELLOW}üê≥ Iniciando infraestrutura com Docker Compose...${NC}"
make infra-up

# Aguardar servi√ßos ficarem prontos
echo -e "${YELLOW}‚è≥ Aguardando servi√ßos ficarem prontos...${NC}"
sleep 10

# Verificar se PostgreSQL est√° pronto
echo -e "${YELLOW}üîç Verificando PostgreSQL...${NC}"
for i in {1..30}; do
    if docker-compose -f infrastructure/docker/docker-compose.yml exec -T postgres pg_isready -U pagemagic > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ PostgreSQL est√° pronto!${NC}"
        break
    fi
    if [ $i -eq 30 ]; then
        echo -e "${RED}‚ùå PostgreSQL n√£o ficou pronto em 30 tentativas${NC}"
        exit 1
    fi
    sleep 1
done

# Executar migra√ß√µes do banco
echo -e "${YELLOW}üóÑÔ∏è  Executando migra√ß√µes do banco...${NC}"
docker-compose -f infrastructure/docker/docker-compose.yml exec -T postgres psql -U pagemagic -d pagemagic -f /docker-entrypoint-initdb.d/migrations.sql || true

# Instalar depend√™ncias dos servi√ßos
echo -e "${YELLOW}üì¶ Instalando depend√™ncias...${NC}"

# Go services
if command -v go &> /dev/null; then
    echo -e "${BLUE}  üì¶ Instalando depend√™ncias do auth-svc (Go)...${NC}"
    cd services/auth-svc && go mod download && cd ../..
else
    echo -e "${YELLOW}  ‚ö†Ô∏è  Go n√£o encontrado. Pule a instala√ß√£o das depend√™ncias Go.${NC}"
fi

# Node.js services
if command -v npm &> /dev/null; then
    echo -e "${BLUE}  üì¶ Instalando depend√™ncias do prompt-svc (Node.js)...${NC}"
    cd services/prompt-svc && npm install && cd ../..
    
    echo -e "${BLUE}  üì¶ Instalando depend√™ncias do front-web (Next.js)...${NC}"
    cd apps/front-web && npm install && cd ../..
else
    echo -e "${YELLOW}  ‚ö†Ô∏è  Node.js/npm n√£o encontrado. Pule a instala√ß√£o das depend√™ncias Node.js.${NC}"
fi

# Rust services
if command -v cargo &> /dev/null; then
    echo -e "${BLUE}  üì¶ Verificando depend√™ncias do builder-svc (Rust)...${NC}"
    cd services/builder-svc && cargo check && cd ../..
else
    echo -e "${YELLOW}  ‚ö†Ô∏è  Rust/Cargo n√£o encontrado. Pule a verifica√ß√£o das depend√™ncias Rust.${NC}"
fi

echo ""
echo -e "${GREEN}üéâ Configura√ß√£o inicial conclu√≠da!${NC}"
echo ""
echo -e "${BLUE}üìã Pr√≥ximos passos:${NC}"
echo -e "  1. ${YELLOW}make web-dev${NC}     - Inicia o front-end web (Next.js)"
echo -e "  2. ${YELLOW}make auth-dev${NC}    - Inicia o servi√ßo de autentica√ß√£o"
echo -e "  3. ${YELLOW}make prompt-dev${NC}  - Inicia o servi√ßo de prompts IA"
echo -e "  4. ${YELLOW}make builder-dev${NC} - Inicia o servi√ßo de constru√ß√£o"
echo ""
echo -e "${BLUE}üìä Monitoramento:${NC}"
echo -e "  ‚Ä¢ Grafana:    ${YELLOW}http://localhost:3000${NC}"
echo -e "  ‚Ä¢ Prometheus: ${YELLOW}http://localhost:9090${NC}"
echo -e "  ‚Ä¢ PgAdmin:    ${YELLOW}http://localhost:5050${NC}"
echo ""
echo -e "${BLUE}üìñ Comandos √∫teis:${NC}"
echo -e "  ‚Ä¢ ${YELLOW}make help${NC}        - Ver todos os comandos dispon√≠veis"
echo -e "  ‚Ä¢ ${YELLOW}make infra-down${NC}  - Parar infraestrutura"
echo -e "  ‚Ä¢ ${YELLOW}make dev-backend${NC} - Iniciar todos os servi√ßos backend"
echo ""
echo -e "${GREEN}‚ú® Page Magic est√° pronto para o desenvolvimento!${NC}"
