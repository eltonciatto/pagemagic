events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Lua package path
    lua_package_path "/usr/local/share/lua/5.1/?.lua;/etc/nginx/lua/?.lua;;";
    
    # Shared dict for rate limiting and caching
    lua_shared_dict usage_cache 10m;
    lua_shared_dict rate_limit 10m;
    
    # Log format with usage metrics
    log_format usage_log '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'usage_user_id="$usage_user_id" '
                        'usage_project_id="$usage_project_id" '
                        'usage_site_id="$usage_site_id" '
                        'usage_bytes_sent="$body_bytes_sent" '
                        'usage_response_time="$request_time"';

    # Upstream services
    upstream meter_svc {
        server meter-svc:8080;
        keepalive 16;
    }

    upstream auth_svc {
        server auth-svc:8080;
        keepalive 16;
    }

    server {
        listen 80;
        server_name _;

        # Load Lua modules
        init_by_lua_file /etc/nginx/lua/init.lua;
        init_worker_by_lua_file /etc/nginx/lua/init_worker.lua;

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Metrics endpoint for Prometheus
        location /metrics {
            access_log off;
            content_by_lua_file /etc/nginx/lua/metrics.lua;
        }

        # Proxy for hosted sites with usage tracking
        location ~ ^/sites/(?<site_id>[^/]+)/? {
            access_log /var/log/nginx/usage.log usage_log;
            
            # Extract usage information from JWT
            access_by_lua_file /etc/nginx/lua/auth_check.lua;
            
            # Log usage metrics
            log_by_lua_file /etc/nginx/lua/usage_tracker.lua;
            
            # Set headers for tracking
            set $usage_user_id "";
            set $usage_project_id "";
            set $usage_site_id $site_id;
            
            # Proxy to the actual site container
            proxy_pass http://site_$site_id;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # API proxy with rate limiting
        location /api/ {
            access_log /var/log/nginx/api.log usage_log;
            
            # Rate limiting
            access_by_lua_file /etc/nginx/lua/rate_limit.lua;
            
            # Extract user info and track usage
            access_by_lua_file /etc/nginx/lua/auth_check.lua;
            log_by_lua_file /etc/nginx/lua/api_usage_tracker.lua;
            
            # Proxy to internal services
            proxy_pass http://api-gateway:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default fallback
        location / {
            return 404 "Site not found";
        }
    }
}
